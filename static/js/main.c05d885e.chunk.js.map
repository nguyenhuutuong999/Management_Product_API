{"version":3,"sources":["conponents/menu/Menu.js","pages/HomePage/HomePage.js","pages/NotFound/NotFound.js","conponents/producList/ProductList.js","conponents/productItem/ProductItem.js","constants/Config.js","utils/APIcaller.js","actions/index.js","pages/ProductListPage/ProductListPage.js","constants/ActionTypes.js","pages/ProductActionPage/ProductActionPage.js","routes.js","App.js","serviceWorker.js","reducers/products.js","reducers/itemEditing.js","reducers/index.js","index.js"],"names":["menus","name","to","exact","MenuLink","_ref","label","activeOnlyWhenExact","react_default","a","createElement","react_router","path","children","_ref2","active","match","className","react_router_dom","Menu","showMenus","result","length","map","menu","index","Menu_MenuLink","key","this","Component","HomePage","NotFound","ProductList","props","ProductItem","onDelete","id","confirm","_this","_this2","_this$props","product","statusName","status","statusClass","price","type","concat","onClick","API_URL","callApi","endpoint","method","arguments","undefined","body","axios","url","Config","data","catch","error","console","log","ProductListPage","deleteProducts","showProduct","products","productItem_ProductItem","fetchAllProducts","producList_ProductList","connect","state","dispatch","then","response","actDeleteProduct","actDeleteProductRequest","ProductActionPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","target","value","checked","setState","defineProperty","onSave","preventDefault","history","_this$state","txtName","txtPrice","chkbStatus","onUpdateProduct","goBack","onAddProduct","params","onGetItem","nextprops","itemEditing","_React$createElement","_this$state2","onSubmit","placeholder","actAddProductRequest","actGetProductRequest","actUpdateProductRequest","routes","main","pages_HomePage_HomePage","pages_ProductListPage_ProductListPage","pages_ProductActionPage_ProductActionPage","pages_NotFound_NotFound","App","showContentMenus","route","component","menu_Menu","Boolean","window","location","hostname","initialState","findIndex","forEach","action","toConsumableArray","splice","push","appReducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c05d885e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nconst menus = [\r\n  {\r\n    name: 'Home',\r\n    to: '/',\r\n    exact: true\r\n  },\r\n  {\r\n    name: 'Management Product',\r\n    to: '/product-list',\r\n    exact: false,\r\n  },\r\n]\r\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\r\n  return (\r\n    <Route\r\n      path={to}\r\n      exact={activeOnlyWhenExact}\r\n      children={({ match }) => {\r\n        var active = match ? 'active' : '';\r\n        return (\r\n          <li className={active}>\r\n            <Link to={to} >\r\n              {label}\r\n            </Link>\r\n          </li>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\nclass Menu extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar navbar-default\">\r\n        <a className=\"navbar-brand\" >CALL API</a>\r\n        <ul className=\"nav navbar-nav\">\r\n          {this.showMenus(menus)}\r\n        </ul>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  showMenus = (menus) => {\r\n    var result = null;\r\n    if (menus.length > 0) {\r\n      result = menus.map((menu, index) => {\r\n        return (\r\n          <MenuLink\r\n            key={index}\r\n            label={menu.name}\r\n            to={menu.to}\r\n            activeOnlyWhenExact={menu.exact}\r\n          />\r\n        )\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n}\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\n\r\nclass HomePage extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div>Home Page</div>\r\n     \r\n    )\r\n  }\r\n}\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n        <div>Not Found</div>\r\n    )\r\n  }\r\n}\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nclass ProductList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel panel-primary\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">List Of Product</h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>STT</th>\r\n                <th>Code</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            {this.props.children}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default ProductList;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ProductItem extends Component {\r\n  onDelete = (id) =>{\r\n    if(confirm(\"Are You Sure To Delete ??\")){ // eslint-disable-line\r\n      this.props.onDelete(id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var {product, index} = this.props;\r\n    var statusName = product.status ? \"Stocking\" : \"Out Of Stock\";\r\n    var statusClass = product.status ? \"primary\" : \"warning\";\r\n    return (\r\n      <tr>\r\n      <td>{index + 1}</td>\r\n      <td>{product.id}</td>\r\n      <td>{product.name}</td>\r\n      <td>{product.price}</td>\r\n      <td>\r\n\r\n        <button type=\"button\" className={`label label-${statusClass}`}>{statusName}</button>\r\n\r\n      </td>\r\n      <td>\r\n\r\n        <Link to = {`product/${product.id}/edit`} className=\"btn btn-success\">Edit</Link>\r\n        <button type=\"button\" className=\"btn btn-danger ml-10\" onClick = {() =>{this.onDelete(product.id)}}>Delete</button>\r\n\r\n      </td>\r\n    </tr>\r\n\r\n\r\n    )\r\n  }\r\n}\r\nexport default ProductItem;\r\n","export const API_URL = \"http://localhost:3000\";","import axios from 'axios';\r\nimport * as Config from '../constants/Config';\r\n\r\nexport default function callApi(endpoint, method = 'GET', body) {\r\n  return axios({\r\n    method: method,\r\n    url: `${Config.API_URL}/${endpoint}`,\r\n    data: body,\r\n  }).catch(error => {\r\n    console.log(error);\r\n  })\r\n}","import * as Types from '../constants/ActionTypes';\r\nimport callApi from '../utils/APIcaller';\r\n\r\nexport const actFetchProducts = (products) => {\r\n    return {\r\n        type: Types.FETCH_PRODUCTS,\r\n        products,\r\n    }\r\n}\r\nexport const actFetchProductsRequest = () => {\r\n    return (dispatch) => {\r\n        callApi('products', 'GET', null).then(response => {\r\n            dispatch(actFetchProducts(response.data));\r\n        });\r\n    }\r\n}\r\nexport const actDeleteProduct = (id) => {\r\n    return {\r\n        type: Types.DELETE_PRODUCT,\r\n        id,\r\n    }\r\n}\r\nexport const actDeleteProductRequest = (id) => {\r\n    return dispatch => {\r\n        callApi(`products/${id}`, 'DELETE', null).then(response => {\r\n            dispatch(actDeleteProduct(id));\r\n        });\r\n    }\r\n}\r\nexport const actAddProduct = (product) => {\r\n    return {\r\n        type: Types.ADD_PRODUCT,\r\n        product,\r\n    }\r\n}\r\nexport const actAddProductRequest = (product) => {\r\n    return dispatch => {\r\n        callApi('products', 'POST', product).then(response => {\r\n            dispatch(actAddProduct(response.data));\r\n        });\r\n    }\r\n}\r\nexport const actGetProduct = (product) => {\r\n    return {\r\n        type: Types.GET_PRODUCT,\r\n        product,\r\n    }\r\n}\r\nexport const actGetProductRequest = (id) => {\r\n    return (dispatch) => {\r\n\r\n        return callApi(`products/${id}`, 'GET', null).then(response => {\r\n            dispatch(actGetProduct(response.data));\r\n        });\r\n    }\r\n}\r\nexport const actUpdateProduct = (product) => {\r\n    return {\r\n        type: Types.UPDATE_PRODUCT,\r\n        product,\r\n    }\r\n}\r\nexport const actUpdateProductRequest = (product) => {\r\n    return (dispatch) => {\r\n\r\n        return callApi(`products/${product.id}`, 'PUT', product).then(response => {\r\n            dispatch(actUpdateProduct(response.data));\r\n        });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ProductList from '../../conponents/producList/ProductList';\r\nimport ProductItem from '../../conponents/productItem/ProductItem';\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport { actFetchProductsRequest, actDeleteProductRequest } from '../../actions';\r\nclass ProductListPage extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchAllProducts();\r\n  }\r\n  \r\n  onDelete = (id) =>{\r\n    this.props.deleteProducts(id);\r\n  }\r\n\r\nrender() {\r\n  var { products } = this.props;\r\n\r\n  return (\r\n    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n\r\n      <Link to = '/product/add' className=\"btn btn-info mb-10\">Add Product</Link>\r\n\r\n      <ProductList>\r\n        {this.showProduct(products)}\r\n      </ProductList>\r\n    </div>\r\n\r\n  )\r\n}\r\nshowProduct = (products) => {\r\n  var result = null;\r\n  if (products.length > 0) {\r\n    result = products.map((product, index) => {\r\n      return (\r\n        <ProductItem\r\n          key={index}\r\n          product={product}\r\n          index={index}\r\n          onDelete = {this.onDelete}\r\n        />\r\n      )\r\n    });\r\n  }\r\n  return result;\r\n} \r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.products,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) =>{\r\n  return{\r\n    fetchAllProducts : () =>{\r\n      dispatch(actFetchProductsRequest());\r\n    },\r\n    deleteProducts : (id) =>{\r\n      dispatch(actDeleteProductRequest(id));\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListPage);\r\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const GET_PRODUCT = 'GET_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { actAddProductRequest, actGetProductRequest, actUpdateProductRequest } from '../../actions/index';\r\n\r\nclass ProductActionPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      txtName: \"\",\r\n      txtPrice: '',\r\n      chkbStatus: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    var { match } = this.props;\r\n    if (match) {\r\n      var id = match.params.id;\r\n      this.props.onGetItem(id);\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextprops){\r\n    \r\n    if(nextprops && nextprops.itemEditing){\r\n      var {itemEditing} = nextprops; \r\n      this.setState({\r\n        id: itemEditing.id,\r\n        txtName : itemEditing.name,\r\n        txtPrice: itemEditing.price,\r\n        chkbStatus : itemEditing.status,\r\n      }) \r\n    }\r\n  }\r\n  onChange = (e) => {\r\n    var target = e.target;\r\n    var name = target.name;\r\n    var value = target.type === 'checkbox' ? target.checked : target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  onSave = (e) => {\r\n    e.preventDefault();\r\n    var { history } = this.props;\r\n    var { id, txtName, txtPrice, chkbStatus } = this.state;\r\n    var product = {\r\n      id: id,\r\n      name: txtName,\r\n      price: txtPrice,\r\n      status: chkbStatus,\r\n    }\r\n    if (id) {\r\n     this.props.onUpdateProduct(product);\r\n     history.goBack();\r\n    } else {\r\n      this.props.onAddProduct(product);\r\n      history.goBack();\r\n    }\r\n  }\r\n  render() {\r\n    var { txtName, txtPrice, chkbStatus } = this.state;\r\n    return (\r\n\r\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n\r\n        <form onSubmit={this.onSave}>\r\n          <div className=\"form-group\">\r\n            <label >Name of Product</label>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Input field\" value={txtName} onChange={this.onChange} name=\"txtName\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label >Price of Product</label>\r\n            <input type=\"number\" className=\"form-control\" placeholder=\"Input field\" onChange={this.onChange} value={txtPrice} name='txtPrice' />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label >Status</label>\r\n\r\n            <div className=\"checkbox\">\r\n              <label>\r\n                <input type=\"checkbox\" value=\"\"\r\n                  name='chkbStatus'\r\n                  onChange={this.onChange}\r\n                  value={chkbStatus}\r\n                  checked={chkbStatus} />\r\n                Stocking\r\n               </label>\r\n            </div>\r\n\r\n          </div>\r\n          <Link to='/product-list' className=\"btn btn-warning mr-10\">\r\n            Go Back\r\n          </Link>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itemEditing: state.itemEditing,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onAddProduct: (product) => {\r\n      dispatch(actAddProductRequest(product));\r\n    },\r\n    onGetItem: (id) => {\r\n      dispatch(actGetProductRequest(id));\r\n    },\r\n    onUpdateProduct: (product) => {\r\n      dispatch(actUpdateProductRequest(product));\r\n    },\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductActionPage);\r\n","import React from 'react';\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport NotFound from './pages/NotFound/NotFound';\r\nimport ProductListPage from './pages/ProductListPage/ProductListPage';\r\nimport ProductActionPage from './pages/ProductActionPage/ProductActionPage';\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: () => <HomePage/>\r\n    },\r\n    {\r\n        path: '/product-list',\r\n        exact: false,\r\n        main: () => <ProductListPage/>\r\n    },\r\n    {\r\n        path: '/product/add',\r\n        exact: false,\r\n        main: ({history}) => <ProductActionPage history = {history} />\r\n    },\r\n    {\r\n        path: '/product/:id/edit',\r\n        exact: false,\r\n        main: ({match, history}) => <ProductActionPage match = {match} history = {history}/>\r\n    },\r\n    {\r\n        path: '',\r\n        exact: false,\r\n        main: () => <NotFound/>\r\n    },\r\n]\r\nexport default routes;","import React, { Component } from 'react';\nimport  './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Menu from './conponents/menu/Menu';\nimport routes from './routes';\nclass App extends Component {\n\n  render() {\n    return (\n\n      <BrowserRouter>\n        <div> \n        <Menu/>\n\n        <div className=\"container\">\n\n          <div className=\"row\">\n            {this.showContentMenus(routes)}\n          </div>\n\n        </div>\n      </div>\n      </BrowserRouter>\n\n    )\n  }\n  showContentMenus = (routes) =>{\n    var result = null;\n    if(routes.length > 0){\n      result = routes.map((route, index) =>{\n        return(\n          <Route\n          key = {index}\n          path = {route.path}\n          exact = {route.exact}\n          component = {route.main}\n          />\n  \n        )\n      })\n    }\n    return <Switch>{result}</Switch>\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from '../constants/ActionTypes';\r\nvar initialState = [];\r\n\r\nvar findIndex = (product, id) => {\r\n    var result = -1;\r\n    product.forEach((product, index) => {\r\n        if (product.id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\nconst products = (state = initialState, action) => {\r\n    var index = -1;\r\n    var { id , product} = action;\r\n    switch (action.type) {\r\n        case Types.FETCH_PRODUCTS: {\r\n            state = action.products;\r\n            return [...state];\r\n        }\r\n        case Types.DELETE_PRODUCT: {\r\n            index = findIndex(state, id);\r\n            state.splice(index, 1);\r\n\r\n            return [...state];\r\n        }\r\n        case Types.ADD_PRODUCT: {\r\n            state.push(action.product);\r\n            return [...state];\r\n        }\r\n        case Types.UPDATE_PRODUCT: {\r\n            index = findIndex(state, product.id);\r\n            state[index] = product;\r\n            return [...state];\r\n        }\r\n        default: return [...state];\r\n    }\r\n}\r\nexport default products;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = {};\r\n\r\nconst itemEditing = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case Types.GET_PRODUCT: {\r\n            return action.product;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\nexport default itemEditing;","import {combineReducers} from 'redux';\r\nimport products from './products';\r\nimport itemEditing from './itemEditing';\r\nconst appReducers = combineReducers({\r\n    products,\r\n    itemEditing,\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport appReducers from './reducers/index';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nconst store = createStore(\n    appReducers,\n    // compose other function together to a single\n    compose(\n        applyMiddleware(\n            /* ----  middlewares ----  */\n           \n            thunk,\n        ),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n\n    ),\n)\n\nReactDOM.render(\n<Provider store = {store}>\n<App />\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n    "],"sourceRoot":""}